{
    "id": "sssp",
    "realm": "sssp",
    "notBefore": 0,
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "50b44186-cefc-4f8c-aef6-efa6ddfc4d3a",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "sssp",
          "attributes": {}
        },
        {
          "id": "7ce954bf-2ce5-4947-826d-eed5fb5a985f",
          "name": "sssp-admin",
          "composite": false,
          "clientRole": false,
          "containerId": "sssp",
          "attributes": {}
        },
        {
          "id": "06635715-207c-44a7-bb93-9dc889d8e148",
          "name": "uma_authorization",
          "composite": false,
          "clientRole": false,
          "containerId": "sssp",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "5a353116-95f5-4159-9569-392502763c69",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "8947386b-be9b-4b09-ae9f-c01b8f4becc1",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "2cf0d7cc-5c1d-4f78-85e9-d93d2f950fcd",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "c5056c79-b6ca-4d8e-b28f-1c11238c400d",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "9e7c5a15-f244-4db8-b234-2d6fec00339c",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "ad60a530-8e6e-473d-9709-3e95e1c74027",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "014cb957-a947-4536-8663-8402561fe94d",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "b4825120-0e73-445a-8525-5e00a6fc5e52",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "678a098d-fc8a-47d0-bc1d-79ca34532589",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "impersonation",
                  "create-client",
                  "query-groups",
                  "view-clients",
                  "manage-identity-providers",
                  "manage-users",
                  "view-users",
                  "query-users",
                  "view-authorization",
                  "view-events",
                  "manage-clients",
                  "manage-events",
                  "view-realm",
                  "manage-authorization",
                  "query-clients",
                  "manage-realm",
                  "query-realms",
                  "view-identity-providers"
                ]
              }
            },
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "87adc1a4-2758-4fec-ad1e-e4d29d6afea0",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "652d77a0-22fb-483d-b0f2-3d7b7b1d7846",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "d068be9f-0fcd-40a9-b235-dbac2ca7401a",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "624115e6-b8b2-4889-a65f-888a246eeb6b",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "e581305c-ab4a-4f77-93a1-0e12c0479c06",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "c3ac6f57-2f1f-4326-a426-594036dcb6c1",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "342da7c2-86c6-4e4a-a3b8-25dcda5656ee",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "3b823b1c-7610-4b95-bd5d-91b0223fa9cf",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "6f1242f7-f53b-4f5c-882c-470ec29b9294",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          },
          {
            "id": "2f06d183-2440-4570-a965-2acde723ca3b",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "broker": [],
        "sssp-client": [],
        "account": [
          {
            "id": "54a0019a-b421-482a-89a4-cf22a631c72a",
            "name": "manage-account",
            "composite": false,
            "clientRole": true,
            "containerId": "57bec15e-ef78-4d09-9698-5c91b55f1be6",
            "attributes": {}
          },
          {
            "id": "c87d7fb0-f2ed-4b81-9d46-c7cf4d3e0fa3",
            "name": "view-profile",
            "composite": false,
            "clientRole": true,
            "containerId": "57bec15e-ef78-4d09-9698-5c91b55f1be6",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRoles": [
      "uma_authorization",
      "offline_access"
    ],
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
      "FreeOTP",
      "Google Authenticator"
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clients": [
      {
        "id": "1466f3dc-9e67-4568-80a2-7714662e282d",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "3d996075-ac74-4e9f-baac-cc8d7c6b780c",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "57bec15e-ef78-4d09-9698-5c91b55f1be6",
        "clientId": "account",
        "name": "${client_account}",
        "baseUrl": "/auth/realms/sssp/account",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "defaultRoles": [
          "manage-account",
          "view-profile"
        ],
        "redirectUris": [
          "/auth/realms/sssp/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "99ec9c41-4ece-4f4d-ac50-380ba644e6b6",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "baseUrl": "/auth/admin/sssp/console/index.html",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "/auth/admin/sssp/console/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "477634f5-19f9-4208-b9ec-e2d76203f8fe",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "43975d0a-f6db-46d6-a6ab-81a3c7a15516",
        "clientId": "sssp-client",
        "rootUrl": "https://sssp.rwicht.ch:8000/",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "https://sssp.rwicht.ch:8000/*"
        ],
        "webOrigins": [
          "https://sssp.rwicht.ch:8000"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "1c5c050b-bcf1-4053-83f0-5817a436926a",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "ab6bc815-f6db-4662-9160-47b9f1ae771d",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "cc5a355f-2c59-4a91-8837-7f06abb727cb",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "383ed7c7-13fd-45a5-bdb3-58692e9ff016",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "08f99682-4a1d-47c6-9882-eccccba59fee",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "72b481e4-0510-4b12-8774-ebb8a0f6e453",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "3c84b5a4-f49f-41a1-8cd4-b089365fab43",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "040f3484-fe79-4ca3-9a76-a060ddfdba64",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ebb44349-2777-4de6-97e6-b50545143392",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "c97d11ba-683e-47cf-bafc-a4bbeaa6d2c2",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "c6ff9c09-dddc-4cf2-b1e7-21ee82b95ea3",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "77d7191b-05d1-4db5-8ca2-7d370a2c1507",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "ddb59f05-f5a9-4d44-90f0-6b848b52461c",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "8ebac5b1-d90d-454c-9a44-dabd46e00ecc",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "cc4edf0c-ad7c-457a-85d4-9ed62d8f4c57",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "07814f26-7c50-4ac4-9430-dcd4486e1457",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3bd1bb5a-7d22-479b-ab78-fc59004fc9c9",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "86dc1a77-5bbd-4c96-9f6b-59158c6f8eff",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3e7cdfe6-3176-40bd-81be-deccc53ce15e",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8852740a-dbec-4326-9289-af6cb285024a",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "045126a4-9053-49cf-8875-a6c02fd9263a",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b306b283-303b-4766-9d73-5df98f9af6c8",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9d132533-a73f-4a67-8a35-627c049b5606",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b91c55b3-c498-41d8-8c93-02b0b1ecdc5e",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ee52dc10-f9fe-4993-ab14-f70443f998cc",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b31d0c48-3bba-43d7-9190-b0c910860d76",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "86a79760-0a8a-493c-b864-e0f42a61c0c1",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "060c398b-bd20-4bea-a285-5131feced2fd",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "c8d0db9f-f082-45e1-b3b1-cf239bdef248",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "476d07e0-92ed-48fb-8453-14d8f649e4f0",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "75654819-524d-43b8-aca9-5bcc4ff89488",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "aca3e80a-1acc-413c-9c90-3250f4e03099",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "291cf531-36d6-498f-80cb-c4b21f1cb9d9",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "821f694a-228c-4fab-8087-686370b8ec48",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "ab91253b-e296-49a7-9207-db33bee7f4d7",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "600132d9-31c0-4584-a351-00dd6dcfd620",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "email",
      "roles",
      "profile",
      "web-origins",
      "role_list"
    ],
    "defaultOptionalClientScopes": [
      "microprofile-jwt",
      "address",
      "phone",
      "offline_access"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "xXSSProtection": "1; mode=block",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "b1cb6e7d-dd8d-4245-bfd6-b947235c8e71",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "4be7fb62-b93c-41c6-a804-a03539be4048",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-full-name-mapper",
              "oidc-address-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-role-list-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-property-mapper"
            ]
          }
        },
        {
          "id": "568263e5-387c-4b0f-8828-725a0ad04755",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "b343c58e-a290-40e4-86e0-15d05349a10c",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "be8fd206-cc51-4856-9a8f-23c0a6c78d96",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "saml-user-attribute-mapper",
              "oidc-address-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-property-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "e36bc3e9-b859-4eb6-9048-bce40eabaf54",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "e1a396b8-e098-4159-a0b0-717d8ffd60d9",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "8e394db4-e9c8-417b-b21c-cb4d87f1caec",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        }
      ],
      "org.keycloak.storage.UserStorageProvider": [
        {
          "id": "818f3953-8c1a-4d11-915c-d3c9a36a72ec",
          "name": "ldap",
          "providerId": "ldap",
          "subComponents": {
            "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
              {
                "id": "eb9d2a14-641a-41e1-8b3a-e7476bbfebe0",
                "name": "creation date",
                "providerId": "user-attribute-ldap-mapper",
                "subComponents": {},
                "config": {
                  "ldap.attribute": [
                    "createTimestamp"
                  ],
                  "is.mandatory.in.ldap": [
                    "false"
                  ],
                  "read.only": [
                    "true"
                  ],
                  "always.read.value.from.ldap": [
                    "true"
                  ],
                  "user.model.attribute": [
                    "createTimestamp"
                  ]
                }
              },
              {
                "id": "57e6a23e-f02a-4d37-b68c-cac05370df9d",
                "name": "email",
                "providerId": "user-attribute-ldap-mapper",
                "subComponents": {},
                "config": {
                  "ldap.attribute": [
                    "mail"
                  ],
                  "is.mandatory.in.ldap": [
                    "false"
                  ],
                  "read.only": [
                    "true"
                  ],
                  "always.read.value.from.ldap": [
                    "false"
                  ],
                  "user.model.attribute": [
                    "email"
                  ]
                }
              },
              {
                "id": "235ad16c-05d8-4a0c-b21b-50ab15e86360",
                "name": "role_groups",
                "providerId": "role-ldap-mapper",
                "subComponents": {},
                "config": {
                  "mode": [
                    "READ_ONLY"
                  ],
                  "membership.attribute.type": [
                    "DN"
                  ],
                  "roles.dn": [
                    "ou=groups,dc=rwicht,dc=ch"
                  ],
                  "user.roles.retrieve.strategy": [
                    "LOAD_ROLES_BY_MEMBER_ATTRIBUTE"
                  ],
                  "membership.ldap.attribute": [
                    "member"
                  ],
                  "membership.user.ldap.attribute": [
                    "cn"
                  ],
                  "memberof.ldap.attribute": [
                    "memberOf"
                  ],
                  "role.name.ldap.attribute": [
                    "cn"
                  ],
                  "use.realm.roles.mapping": [
                    "true"
                  ],
                  "role.object.classes": [
                    "groupOfNames"
                  ]
                }
              },
              {
                "id": "bd646391-5a22-453a-b59c-57fe9d6830ae",
                "name": "username",
                "providerId": "user-attribute-ldap-mapper",
                "subComponents": {},
                "config": {
                  "ldap.attribute": [
                    "cn"
                  ],
                  "is.mandatory.in.ldap": [
                    "true"
                  ],
                  "read.only": [
                    "true"
                  ],
                  "always.read.value.from.ldap": [
                    "false"
                  ],
                  "user.model.attribute": [
                    "username"
                  ]
                }
              },
              {
                "id": "11a0f21c-79df-4e7e-8b59-1535c4634ec1",
                "name": "first name",
                "providerId": "user-attribute-ldap-mapper",
                "subComponents": {},
                "config": {
                  "ldap.attribute": [
                    "givenName"
                  ],
                  "is.mandatory.in.ldap": [
                    "true"
                  ],
                  "always.read.value.from.ldap": [
                    "true"
                  ],
                  "read.only": [
                    "true"
                  ],
                  "user.model.attribute": [
                    "firstName"
                  ]
                }
              },
              {
                "id": "d2804aae-545f-4a6d-8953-d5c2efcea9f3",
                "name": "last name",
                "providerId": "user-attribute-ldap-mapper",
                "subComponents": {},
                "config": {
                  "ldap.attribute": [
                    "sn"
                  ],
                  "is.mandatory.in.ldap": [
                    "true"
                  ],
                  "always.read.value.from.ldap": [
                    "true"
                  ],
                  "read.only": [
                    "true"
                  ],
                  "user.model.attribute": [
                    "lastName"
                  ]
                }
              },
              {
                "id": "122d864f-f617-4009-ac1b-c977fe4fa456",
                "name": "modify date",
                "providerId": "user-attribute-ldap-mapper",
                "subComponents": {},
                "config": {
                  "ldap.attribute": [
                    "modifyTimestamp"
                  ],
                  "is.mandatory.in.ldap": [
                    "false"
                  ],
                  "read.only": [
                    "true"
                  ],
                  "always.read.value.from.ldap": [
                    "true"
                  ],
                  "user.model.attribute": [
                    "modifyTimestamp"
                  ]
                }
              }
            ]
          },
          "config": {
            "fullSyncPeriod": [
              "-1"
            ],
            "pagination": [
              "true"
            ],
            "connectionPooling": [
              "true"
            ],
            "usersDn": [
              "ou=users,dc=rwicht,dc=ch"
            ],
            "cachePolicy": [
              "DEFAULT"
            ],
            "useKerberosForPasswordAuthentication": [
              "false"
            ],
            "importEnabled": [
              "true"
            ],
            "enabled": [
              "true"
            ],
            "bindCredential": [
              "admin"
            ],
            "usernameLDAPAttribute": [
              "cn"
            ],
            "bindDn": [
              "cn=admin,dc=rwicht,dc=ch"
            ],
            "changedSyncPeriod": [
              "-1"
            ],
            "lastSync": [
              "1597856891"
            ],
            "vendor": [
              "other"
            ],
            "uuidLDAPAttribute": [
              "cn"
            ],
            "allowKerberosAuthentication": [
              "false"
            ],
            "connectionUrl": [
              "ldap://127.0.0.1"
            ],
            "syncRegistrations": [
              "false"
            ],
            "authType": [
              "simple"
            ],
            "debug": [
              "false"
            ],
            "searchScope": [
              "2"
            ],
            "useTruststoreSpi": [
              "ldapsOnly"
            ],
            "priority": [
              "0"
            ],
            "userObjectClasses": [
              "person"
            ],
            "rdnLDAPAttribute": [
              "cn"
            ],
            "editMode": [
              "READ_ONLY"
            ],
            "validatePasswordPolicy": [
              "false"
            ],
            "batchSizeForSync": [
              "1000"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "3a384951-7b8a-4b66-ba78-ef386882d122",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "6e632d09-e000-4e1a-aa25-8d5c9e6d32b5",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "a1d124de-c97b-4365-a5f8-1299df84a3dd",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "723adc12-24d3-4567-970b-f123fc9e33d5",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "idp-email-verification",
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "4a2c1984-973a-4257-8844-79c532d910ca",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "OPTIONAL",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "12f510c4-0f45-4d5e-bd17-fa71bd376992",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "b539dcea-11a3-48f8-8891-8659ac466e48",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "60d80678-008a-4c52-aac6-223fd3bb8dcd",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "requirement": "OPTIONAL",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "7e25cc49-86c7-4ead-9831-ba903f4336e0",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "f3297df5-372e-4c34-82e8-e61356c6b113",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "72976474-12d9-422f-a8c7-d9200dd109e0",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "OPTIONAL",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "58f5ddb5-f601-411c-9a86-938b9a22e06f",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "4fbd388d-c0fb-41f8-ab4c-b4f2f17475d8",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "5f71bd36-7561-413f-8979-98157d5bf803",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "c01c67a2-0ab6-4adb-9387-bf8a148b8db2",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "requirement": "OPTIONAL",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "03720b0f-d187-4859-9ad5-157ef0280e17",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "a1393615-75ca-413f-a4fe-dce7004f56ab",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "9f1b886b-548e-4987-80d0-c3f6d67532cd",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "_browser_header.xXSSProtection": "1; mode=block",
      "_browser_header.xFrameOptions": "SAMEORIGIN",
      "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains",
      "permanentLockout": "false",
      "quickLoginCheckMilliSeconds": "1000",
      "_browser_header.xRobotsTag": "none",
      "maxFailureWaitSeconds": "900",
      "minimumQuickLoginWaitSeconds": "60",
      "failureFactor": "30",
      "actionTokenGeneratedByUserLifespan": "300",
      "maxDeltaTimeSeconds": "43200",
      "_browser_header.xContentTypeOptions": "nosniff",
      "offlineSessionMaxLifespan": "5184000",
      "actionTokenGeneratedByAdminLifespan": "43200",
      "_browser_header.contentSecurityPolicyReportOnly": "",
      "bruteForceProtected": "false",
      "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "waitIncrementSeconds": "60",
      "offlineSessionMaxLifespanEnabled": "false"
    },
    "keycloakVersion": "6.0.1",
    "userManagedAccessAllowed": false
  }